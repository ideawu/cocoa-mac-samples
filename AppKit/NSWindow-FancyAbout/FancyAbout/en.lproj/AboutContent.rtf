{\rtf1\ansi\ansicpg1252\cocoartf1138
{\fonttbl\f0\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;}
\vieww12180\viewh15820\viewkind1
\pard\tx300\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720

\f0\b\fs36 \cf0 About the FancyAbout example
\b0 \
\pard\tx300\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720

\fs28 \cf0 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720
\cf0 FancyAbout is an example Cocoa application that displays a plain, borderless \'93About\'85\'94 panel and illustrates several techniques to achieve a particular appearance:\
	\'95 programmatically constructing a window with no title bar\
	\'95 making a window disappear when the user clicks in it (or clicks in other windows or other applications)\
	\'95 smooth, animated scrolling of text\
\
If you\'92re considering using this style of panel, keep in mind that the Application Kit offers a standard \'93About\'85\'94 panel that is easy to invoke (see NSApplication\'92s 
\b orderFrontStandardAboutPanel:
\b0  method) and that displays a panel that looks just like panels put up by most applications. In addition, if your panel provides information that the user may want to select and copy, such as an email address for technical support, they will find it frustrating when clicking to select something makes the window go away!\
\
Even if you choose not to use a panel like this in your application, you can still adopt other techniques from this example, such as creating a borderless window and animating the scrolling of text.\
}